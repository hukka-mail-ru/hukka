/*    
* При инициализации программы ping, она открывает raw-сокет ICMP и может напрямую обращаться к IP, минуя TCP и UDP.

* Ping форматирует ICMP-сообщение типа 8, эхо-запрос и посылает его (используя функцию «sendto») на желаемый адрес назначения. Система предоставляет IP-заголовок и конверт (envelope) канального уровня.

* При получении ICMP-сообщений, у ping есть возможность проверить каждый пакет и выбрать нужное
* Обычное поведение – брать ICMP-сообщения типа 0, эхо-отклики, у которых значение поля идентификатора совпадает с PID программы.

* Ping использует временную метку в области данных эхо-отклика чтобы вычислить полное (туда-обратно) время. Он также сообщает о времени жизни TTL из IP-заголовка отклика.

* Когда что-то идет не так, ping может сообщать о ICMP-сообщениях других типов, появляющихся на входе. Такие сообщения включают в себя “Получатель недоступен” (Destination Unreachable) и “Время ожидания превышено” (Time Exceeded).
*/
#include <iostream>
#include <ping.hpp>


using namespace std;

int PingIP(const char* ip)
{
    Pinger pinger;
    
    if(pinger.ping(ip) < 0)
	return -1;
    
    cout << "Elapsed time : " << pinger.getElapsed() << " microsec" << endl;
    cout << "Bytes : " << pinger.getBytes() << endl;
    
    cout << "Speed : " << 1000000*pinger.getBytes() / pinger.getElapsed()
	    << " bytes/sec " << endl;

    cout << "================================" << endl;
    return 0;
    
}




int main()
{
    PingIP("192.168.148.103");
    PingIP("192.168.148.24");
    PingIP("127.0.0.1");
    
    return 0;
}





